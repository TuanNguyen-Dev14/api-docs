{
  "openapi": "3.0.1",
  "x-stoplight": {
    "id": "3bcu1jxqn6ack"
  },
  "info": {
    "title": "Katalon TestOps API reference",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://testops.katalon.io",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "basicScheme": []
    }
  ],
  "tags": [
    {
      "name": "Web Service"
    },
    {
      "name": "File",
      "description": "APIs for File"
    },
    {
      "name": "Agent"
    },
    {
      "name": "User",
      "description": "APIs for User"
    },
    {
      "name": "Agent",
      "description": "APIs for Agent"
    },
    {
      "name": "Comment"
    },
    {
      "name": "Test Case",
      "description": "APIs for Test Case"
    },
    {
      "name": "Task"
    },
    {
      "name": "Web Service",
      "description": "APIs for Web Service"
    },
    {
      "name": "Test Report",
      "description": "APIs for Test Report"
    },
    {
      "name": "Project"
    },
    {
      "name": "Test Object"
    },
    {
      "name": "Build",
      "description": "APIs for Build"
    },
    {
      "name": "Team"
    },
    {
      "name": "Execution Test Suite"
    },
    {
      "name": "Job",
      "description": "APIs for Job"
    },
    {
      "name": "Execution Test Result"
    },
    {
      "name": "Execution Test Suite",
      "description": "APIs for Execution Test Suite"
    },
    {
      "name": "File"
    },
    {
      "name": "Comment",
      "description": "APIs for Comment"
    },
    {
      "name": "Project",
      "description": "APIs for Project"
    },
    {
      "name": "Label"
    },
    {
      "name": "Search",
      "description": "APIs for Search"
    },
    {
      "name": "Test Cloud Agent"
    },
    {
      "name": "User"
    },
    {
      "name": "Katalon Recorder"
    },
    {
      "name": "Smart Scheduler"
    },
    {
      "name": "Test Report"
    },
    {
      "name": "Test Case"
    },
    {
      "name": "Execution"
    },
    {
      "name": "Execution Request"
    },
    {
      "name": "Search"
    },
    {
      "name": "Release"
    },
    {
      "name": "Team",
      "description": "APIs for Team"
    },
    {
      "name": "Build"
    },
    {
      "name": "Test Plan"
    },
    {
      "name": "Task",
      "description": "APIs for Task"
    },
    {
      "name": "Execution export"
    },
    {
      "name": "Katalon Recorder",
      "description": "APIs for Katalon Recorder"
    },
    {
      "name": "Job"
    },
    {
      "name": "Test Object",
      "description": "APIs for Test Object"
    },
    {
      "name": "Execution Request",
      "description": "APIs for Execution Request"
    },
    {
      "name": "Release",
      "description": "APIs for Release"
    },
    {
      "name": "Test Project",
      "description": "APIs for Test Project"
    },
    {
      "name": "Test Plan",
      "description": "APIs for Test Plan"
    },
    {
      "name": "Execution Test Result",
      "description": "APIs for Execution Test Result"
    },
    {
      "name": "Test Project"
    },
    {
      "name": "Test Suite",
      "description": "APIs for Test Suite"
    },
    {
      "name": "Execution",
      "description": "APIs for Execution"
    },
    {
      "name": "Test Suite"
    }
  ],
  "paths": {
    "/api/v1/test-projects/{id}": {
      "get": {
        "tags": [
          "Test Project",
          "Build"
        ],
        "summary": "Returns a Test Project detail.",
        "operationId": "get_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestProjectResource"
                }
              }
            }
          }
        },
        "x-internal": true,
        "deprecated": true
      },
      "put": {
        "tags": [
          "Test Project"
        ],
        "summary": "Updates a Test Project detail. Returns the updated Test Project detail.",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestProjectResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestProjectResource"
                }
              }
            }
          }
        },
        "x-internal": true
      },
      "delete": {
        "tags": [
          "Test Project"
        ],
        "summary": "Deletes a Test Project. Returns the deleted Test Project.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestProjectResource"
                }
              }
            }
          }
        },
        "x-internal": true
      }
    },
    "/api/v1/test-projects/{id}/schedulers/{schedulerId}": {
      "get": {
        "tags": [
          "Test Plan",
          "Test Project"
        ],
        "summary": "Returns a schedule detail.",
        "operationId": "getScheduler",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "schedulerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulerResource"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "Test Plan",
          "Test Project"
        ],
        "summary": "Updates a schedule detail. Returns the updated schedule detail.",
        "operationId": "update_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "schedulerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulerResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulerResource"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Test Plan",
          "Test Project"
        ],
        "summary": "Deletes a schedule. Returns the deleted schedule detail.",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "schedulerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulerResource"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Returns all Teams of the current User.",
        "operationId": "list",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageTeamResource"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "Updates a Team detail. Returns the updated Team detail.",
        "operationId": "update_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Creates a new Team. Returns the created Team detail.",
        "operationId": "create_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run-configurations/{id}/execute": {
      "put": {
        "tags": [
          "Test Runs",
          "Test Plan"
        ],
        "summary": "Execute a test run",
        "operationId": "run",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuildInfo"
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint executes a test run and returns the job information."
      }
    },
    "/api/v1/releases": {
      "put": {
        "tags": [
          "Release"
        ],
        "summary": "Updates a Release. Returns the Release details.",
        "operationId": "update_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Release"
        ],
        "summary": "Creates a Release. Returns the Release details.",
        "operationId": "createOrUpdate_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Returns all Projects of a Team.",
        "operationId": "list_1",
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageProjectResource"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Updates a Project detail. Returns the updated Project detail.",
        "operationId": "update_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Creates a new Project. Returns the created Project detail.",
        "operationId": "create_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/update-status": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Updates a Project status. Returns the updated Project detail.",
        "operationId": "updateStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/permission/team/user": {
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "Updates the role of a User in a Team. Returns the updated detail.",
        "description": "The user issuing this request must be the Admin of the team.",
        "operationId": "updateUserTeam",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTeamResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserTeamResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/{notificationId}/users": {
      "put": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Mark unread the notification as read of the current user",
        "operationId": "updateReadNotification",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/notifications/users": {
      "put": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Mark all unread notifications as read of the current user",
        "operationId": "updateReadNotifications",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/notifications/number-of-notifications": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Get number of notifications for the current user",
        "operationId": "getNumberOfNotifications",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Reset number of notifications to 0 for the current user",
        "operationId": "resetNumberOfNotifications",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/k8s-agent": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Updates a K8S agent detail. Returns the updated agent detail.",
        "operationId": "update_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/K8SAgentResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/K8SAgentResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Agent"
        ],
        "summary": "Creates a K8S agent. Returns the created agent detail.",
        "operationId": "create_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/K8SAgentResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/K8SAgentResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/incidents": {
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Updates a Task detail. Returns the updated Task detail.",
        "operationId": "update_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentResource"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Creates a Task for the test results. Returns the created Task detail.",
        "operationId": "createIncident",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentResource"
                }
              }
            }
          }
        },
        "deprecated": true,
        "description": ""
      }
    },
    "/api/v1/comments": {
      "put": {
        "tags": [
          "Comment"
        ],
        "summary": "Updates a Comment detail. Returns the updated Comment detail.",
        "operationId": "update_7",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "Creates a Comment. Returns the created Comment detail.",
        "operationId": "create_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/circle-ci-agent": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Updates a CircleCI agent detail. Returns the updated agent detail.",
        "operationId": "update_8",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CircleCIAgentResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CircleCIAgentResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Agent"
        ],
        "summary": "Creates a new CircleCI agent. Returns the created agent detail.",
        "operationId": "create_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CircleCIAgentResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CircleCIAgentResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/build/{id}": {
      "put": {
        "tags": [
          "Build"
        ],
        "summary": "Updates a Build. Returns the Build details.",
        "operationId": "update_9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BuildResource"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Build"
        ],
        "summary": "Deletes a Build. Returns the deleted Build details.",
        "operationId": "delete_8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BuildResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agent/threshold": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Updates the threshold for Local agent. Returns the agent detail.",
        "operationId": "updateThreshold",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change name for current user.",
        "operationId": "changeName",
        "parameters": [
          {
            "name": "firstName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/avatar": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Downloads the avatar of the current User. Returns the current avatar file.",
        "operationId": "downloadAvatar",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change the avatar of the current User. Returns the updated User detail.",
        "operationId": "changeAvatar",
        "parameters": [
          {
            "name": "uploadedPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/add": {
      "post": {
        "tags": [
          "User",
          "Team"
        ],
        "summary": "Adds users to a Team. Returns the added User detail.",
        "description": "The user issuing this request must be the Admin of the team.",
        "operationId": "assignUserTeam",
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "newUserIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-settings": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Returns the User Settings detail.",
        "operationId": "get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Updates the User Settings detail. Returns the updated User Settings detail.",
        "operationId": "createOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testops-reports": {
      "post": {
        "tags": [
          "Test Report"
        ],
        "summary": "Saves and processes multiple uploaded TestOps reports.",
        "operationId": "processTestOpsReports",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadBatchFileResource"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UploadBatchResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testng/test-reports": {
      "post": {
        "tags": [
          "Test Report"
        ],
        "summary": "Uploads and processes the TestNG reports to an execution.",
        "operationId": "uploadTestNGReports",
        "parameters": [
          {
            "name": "executionId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isEnd",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uploadedPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/test-suites/{id}/edit": {
      "post": {
        "tags": [
          "Test Suite"
        ],
        "summary": "Edit a TestOps test suite",
        "operationId": "edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSuiteResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetTestSuiteResource"
                }
              }
            }
          }
        },
        "description": "This endpoint edits a test suite created in TestOps and returns the edited test suite details."
      }
    },
    "/api/v1/test-suites/create": {
      "post": {
        "tags": [
          "Test Suite"
        ],
        "summary": "Create a test suite",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSuiteResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTestSuiteResource"
                }
              }
            }
          }
        },
        "description": "This endpoint creates a test suite and returns the newly created test suite details."
      }
    },
    "/api/v1/test-results/{id}/mask-as-retested": {
      "post": {
        "tags": [
          "Execution Test Result"
        ],
        "operationId": "markAsRetested",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetestedTestResultResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionTestResultResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-results/{id}/label": {
      "post": {
        "tags": [
          "Execution Test Result"
        ],
        "operationId": "updateLabel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemLabelResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LabelResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-results/{id}/incidents": {
      "post": {
        "tags": [
          "Execution Test Result",
          "Task"
        ],
        "summary": "Link an Execution Test Result to a Task. Returns the created binding detail.",
        "operationId": "linkIncidents",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentExecutionTestResultResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentExecutionTestResultResource"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Execution Test Result",
          "Task"
        ],
        "summary": "Unlink an Execution Test Result to a Task. Returns the deleted binding detail.",
        "operationId": "unlinkIncidents",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentExecutionTestResultResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentExecutionTestResultResource"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/test-projects/{id}/update-script-repo": {
      "post": {
        "tags": [
          "Test Project"
        ],
        "summary": "Update a Test Project package. Returns the updated Test Project detail. Use to update script repository",
        "operationId": "updateScriptRepo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uploadedPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestProjectResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-projects/{id}/schedulers": {
      "post": {
        "tags": [
          "Test Plan",
          "Test Project"
        ],
        "summary": "Creates a new schedule for a Test Plan. Returns the created schedule detail.",
        "operationId": "create_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulerResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulerResource"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/test-projects/{id}/refresh-tsc": {
      "post": {
        "tags": [
          "Test Project"
        ],
        "summary": "Refresh Test Suite Collection list of Git Test Project",
        "operationId": "refreshTSC",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/test-projects/upload-script-repo": {
      "post": {
        "tags": [
          "Test Project"
        ],
        "summary": "Creates a new Test Project. Returns the created Test Project. Use to create script repository",
        "operationId": "uploadScriptRepo",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "defaultTestProject",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uploadedPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestProjectResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-projects/sample": {
      "post": {
        "tags": [
          "Test Project"
        ],
        "summary": "Creates a new sample Test Project. Returns the created Test Project.",
        "operationId": "createSample",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "KS",
                "GIT"
              ]
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestProjectResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-projects/sample-git-test-project": {
      "post": {
        "tags": [
          "Test Project"
        ],
        "summary": "Creates a new sample Git Test Project when setting up a Git Repository. Returns the created Sample Git Test Project.",
        "operationId": "createSampleGitTestProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestProjectResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-cases/update": {
      "post": {
        "tags": [
          "Test Case"
        ],
        "summary": "Update a Test Case.",
        "operationId": "update_10",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCaseResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestCaseResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/smart-scheduler/schedule": {
      "post": {
        "summary": "Schedule a test run",
        "operationId": "createRunConfigurationAndSchedule",
        "parameters": [
          {
            "name": "verifyRunConfiguration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmartSchedulerResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetSmartScheduler"
                }
              }
            }
          }
        },
        "description": "This endpoint creates and triggers a test run and return the test run details.",
        "tags": [
          "Schedule"
        ]
      }
    },
    "/api/v1/smart-scheduler/save-configuration": {
      "post": {
        "summary": "Create and save a test run schedule",
        "operationId": "createOrUpdateConfiguration",
        "parameters": [
          {
            "name": "verifyRunConfiguration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunConfigurationResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetRunConfiguration"
                }
              }
            }
          }
        },
        "description": "This endpoint creates a test run schedule and save its configuration. It returns the saved test run details.",
        "tags": [
          "Schedule"
        ]
      }
    },
    "/api/v1/smart-scheduler/run": {
      "post": {
        "summary": "Create and run a test run schedule",
        "operationId": "createRunConfigurationAndRun",
        "parameters": [
          {
            "name": "verifyRunConfiguration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunConfigurationResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetRunConfiguration"
                }
              }
            }
          }
        },
        "description": "This endpoint creates a test run schedule and run it immediately. It returns the test run details.",
        "tags": [
          "Schedule"
        ]
      }
    },
    "/api/v1/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Queries the resources of a specific type by multiple conditions. Returns the pageable resources satisfying the query.",
        "operationId": "search_1",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageBaseResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Queries the resources of a specific type by multiple conditions. Returns the pageable resources satisfying the query.",
        "operationId": "search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageBaseResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/cache": {
      "get": {
        "tags": [
          "Search"
        ],
        "operationId": "searchCache_1",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ck",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageBaseResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Search"
        ],
        "operationId": "searchCache",
        "parameters": [
          {
            "name": "ck",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageBaseResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run-configurations": {
      "post": {
        "tags": [
          "Test Plan"
        ],
        "summary": "Creates or updates a Test Plan. Returns the Test Plan detail.",
        "operationId": "createOrUpdateConfiguration_1",
        "parameters": [
          {
            "name": "verifyRunConfiguration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunConfigurationResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RunConfigurationResource"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/run-configurations/{id}/unlink-release": {
      "post": {
        "tags": [
          "Test Plan",
          "Build",
          "Release"
        ],
        "summary": "Unlink an Run Configuration from a Release or a Build. Returns the updated Run Configuration detail.",
        "operationId": "unlinkRelease",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RunConfigurationResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run-configurations/{id}/link-release": {
      "post": {
        "tags": [
          "Test Plan",
          "Release"
        ],
        "summary": "Link an Run Configuration to a Release. Returns the updated Run Configuration detail.",
        "operationId": "linkRelease",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "releaseId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RunConfigurationResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run-configurations/{id}/link-build": {
      "post": {
        "tags": [
          "Test Plan",
          "Build"
        ],
        "summary": "Link an Run Configuration to a Build. Returns the updated Run Configuration detail.",
        "operationId": "linkBuild",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "buildId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RunConfigurationResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run-configurations/sample": {
      "post": {
        "tags": [
          "Test Plan"
        ],
        "summary": "Creates and triggers a sample Test Plan. Returns the created Test Plan detail.",
        "operationId": "createAndTriggerSample",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunConfigurationResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RunConfigurationResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/releases/{id}/active": {
      "post": {
        "tags": [
          "Release"
        ],
        "summary": "Open or close a Release. Returns the updated Release detail.",
        "operationId": "activeRelease",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "closed",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{id}/sample-data": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create sample data for project.",
        "operationId": "createSampleData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/project-settings": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "createOrUpdate_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSettingResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSettingResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/project-configurations/{id}": {
      "get": {
        "tags": [
          "project-configuration-resource-controller"
        ],
        "operationId": "get_12",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "TIMEZONE",
                "ASSERTION_PATTERN",
                "DEFAULT_TEST_PROJECT"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectConfigurationResource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "project-configuration-resource-controller"
        ],
        "operationId": "update_11",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectConfigurationResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectConfigurationResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}/trial-request": {
      "get": {
        "tags": [
          "organization-trial-request-resource-controller"
        ],
        "summary": "Get organization trial request data",
        "operationId": "getTrialRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationTrialRequestResource"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": [
          "organization-trial-request-resource-controller"
        ],
        "summary": "Submit organization trial request",
        "operationId": "submitTrialRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "feature",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "KSE",
                "ENGINE",
                "TESTOPS",
                "FLOATING_ENGINE",
                "UNLIMITED_KSE",
                "UNLIMITED_ENGINE",
                "TESTOPS_BUSINESS",
                "TESTOPS_ENTERPRISE",
                "PER_USER_KSE",
                "TESTCLOUD_MINUTE",
                "TESTCLOUD_SESSION_WEB",
                "VISUAL_TESTING_PRO",
                "TESTOPS_PLATFORM"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationTrialRequestResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/katalon/test-reports": {
      "post": {
        "tags": [
          "Test Report"
        ],
        "summary": "Saves and processes the uploaded Katalon reports.",
        "operationId": "processS3File",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isEnd",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uploadedPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UploadBatchResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/katalon/test-reports/update-result": {
      "post": {
        "tags": [
          "Test Report"
        ],
        "operationId": "updateResult",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestRunResult"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/katalon/test-reports/multiple": {
      "post": {
        "tags": [
          "Test Report"
        ],
        "summary": "Saves and processes multiple uploaded Katalon reports.",
        "operationId": "processMultipleS3File",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadBatchFileResource"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UploadBatchResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/katalon-recorder/test-reports": {
      "post": {
        "tags": [
          "Test Report",
          "Katalon Recorder"
        ],
        "summary": "Uploads and processes a Katalon Recorder report.",
        "operationId": "upload",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isEnd",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uploadedPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/katalon-recorder/backup": {
      "post": {
        "tags": [
          "Katalon Recorder"
        ],
        "summary": "Saves a Katalon Recorder backup detail.",
        "operationId": "backup",
        "parameters": [
          {
            "name": "uploadedPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/junit/test-reports": {
      "post": {
        "tags": [
          "Test Report"
        ],
        "summary": "Uploads and processes the JUnit reports to an Execution.",
        "operationId": "uploadJUnitReports",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isEnd",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uploadedPath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sessionId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/jobs/update-job": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Updates a Job detail. Returns the updated Job detail.",
        "operationId": "updateJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JobResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/git/update": {
      "post": {
        "tags": [
          "Test Project"
        ],
        "summary": "Updates a Git Test Project detail. Returns the updated Git Test Project detail.",
        "operationId": "updateGitRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GitRepositoryResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GitRepositoryResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/git/create": {
      "post": {
        "tags": [
          "Test Project"
        ],
        "summary": "Creates a Git Test Project. Returns the Git Test Project detail.",
        "operationId": "createGitRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GitRepositoryResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GitRepositoryResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{id}/unlink-release": {
      "post": {
        "tags": [
          "Build",
          "Release",
          "Test Runs"
        ],
        "summary": "Unlink an Execution to a Release and Build. Returns the updated Execution detail.",
        "operationId": "unlinkReleaseAndBuild",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{id}/share-report": {
      "post": {
        "summary": "Allow users to send email with attached execution reports [PDF].",
        "operationId": "shareExecutionReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionShareReportResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/api/v1/executions/{id}/rerun": {
      "post": {
        "summary": "Rerun an Execution.",
        "operationId": "rerunExecution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/api/v1/executions/{id}/link-release": {
      "post": {
        "tags": [
          "Release",
          "Test Runs"
        ],
        "summary": "Link an Execution to a Release. Returns the updated Execution detail.",
        "operationId": "linkRelease_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "releaseId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{id}/link-build": {
      "post": {
        "tags": [
          "Build",
          "Test Runs"
        ],
        "summary": "Link an Execution to a Build. Returns the updated Execution detail.",
        "operationId": "linkBuild_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "buildId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{id}/export/send-mail": {
      "post": {
        "tags": [
          "Execution export"
        ],
        "summary": "Send email in case of timeout",
        "operationId": "sendExecutionExportMail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PDF",
                "CSV",
                "XLSX",
                "ZIP",
                "HAR"
              ],
              "default": "CSV"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/executions/{id}/export/enqueue-file": {
      "post": {
        "tags": [
          "Execution export"
        ],
        "summary": "Enqueue file to be exported",
        "operationId": "enqueueFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PDF",
                "CSV",
                "XLSX",
                "ZIP",
                "HAR"
              ],
              "default": "CSV"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/executions/terminate": {
      "post": {
        "summary": "Terminate a running test run",
        "operationId": "terminatedExecution",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionResource"
                }
              }
            }
          }
        },
        "description": "This endpoint terminates a running test run and returns the terminated test run detail.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/api/v1/executions/reimport": {
      "post": {
        "summary": "Re-imports an Execution. Returns the newly imported Execution detail.",
        "operationId": "reImportExecution",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionResource"
                }
              }
            }
          }
        },
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/api/v1/circle-ci-agent/projects": {
      "post": {
        "tags": [
          "Agent"
        ],
        "operationId": "getFollowedProjects",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CircleCIConnectionResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CircleCIProject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/build": {
      "post": {
        "tags": [
          "Build"
        ],
        "summary": "Creates a Build. Returns the Build details.",
        "operationId": "create_7",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BuildResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agent": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Generates the configuration file for the Local agent. Returns the configuration file.",
        "operationId": "generateAgent",
        "parameters": [
          {
            "name": "agentConfigResource",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AgentConfigResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Agent"
        ],
        "summary": "Creates or updates a Local agent. Returns the agent detail.",
        "operationId": "create_8",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/token": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "getKatOneToken",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Returns the current User detail.",
        "operationId": "getMe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/time-zones": {
      "get": {
        "tags": [
          "project-configuration-resource-controller"
        ],
        "operationId": "listTimeZones",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeZoneResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testops-test-suite/{id}": {
      "get": {
        "tags": [
          "Test Suite"
        ],
        "summary": "Generate file",
        "operationId": "generateFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GROOVY",
                "TS"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/test-suites/{id}": {
      "get": {
        "tags": [
          "Test Suite"
        ],
        "summary": "Retrieve a test suite detail",
        "operationId": "get_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetTestSuiteResource"
                }
              }
            }
          }
        },
        "description": "This endpoint returns a test suite detail."
      },
      "delete": {
        "tags": [
          "Test Suite"
        ],
        "summary": "Delete a TestOps test suite",
        "operationId": "deleteTestSuite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetTestSuiteResource"
                }
              }
            }
          }
        },
        "description": "This endpoint delete TestOps test suite and returns the deleted test suite details"
      }
    },
    "/api/v1/test-results/{id}": {
      "get": {
        "tags": [
          "Execution Test Result"
        ],
        "summary": "Returns an Execution Test Result detail.",
        "operationId": "get_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionTestResultResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-results/logs/{id}": {
      "get": {
        "tags": [
          "Execution Test Result"
        ],
        "summary": "Downloads a test result's log. Returns the log file.",
        "operationId": "getStdout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-projects/{id}/download": {
      "get": {
        "tags": [
          "Test Project"
        ],
        "summary": "Downloads a Test Project package. Returns the latest Test Project package file.",
        "operationId": "download",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/test-projects/default": {
      "get": {
        "tags": [
          "Test Project"
        ],
        "summary": "Get default Test Project of a Project. Returns Test Project resource if exist.",
        "operationId": "getDefaultTestProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestProjectResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-objects/{id}": {
      "get": {
        "tags": [
          "Web Service"
        ],
        "summary": "Returns a Web Service detail.",
        "operationId": "get_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestObjectResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-object-entities/{id}": {
      "get": {
        "tags": [
          "Test Object"
        ],
        "summary": "Returns a Test Object detail.",
        "operationId": "get_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestObjectEntityResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-folder/sub-folders": {
      "get": {
        "tags": [
          "test-folder-resource-controller"
        ],
        "summary": "List subfolders of a folder under n nested level.",
        "operationId": "getSubFolders",
        "parameters": [
          {
            "name": "testFolderId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "numberOfLevel",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestFolderResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-cloud/{id}": {
      "get": {
        "tags": [
          "Test Cloud Agent"
        ],
        "summary": "Get a Test Cloud agent by testCloudAgentId. Returns the test cloud agent detail.",
        "operationId": "get_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestCloudAgentResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-cloud/tunnels": {
      "get": {
        "tags": [
          "test-cloud-proxy-tunnel-controller"
        ],
        "summary": "Get a Test Cloud Proxy Tunnel by organizationId and teamId. Returns list active ProxyTunnel.",
        "operationId": "getActiveTunnels",
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TunnelMetaDataResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-cloud/organizations/{organizationId}/licenses": {
      "get": {
        "tags": [
          "Test Cloud Agent"
        ],
        "summary": "Get Test Cloud Licenses by organizationId.",
        "operationId": "getTestCloudLicenses",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestCloudLicensesResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-cases/{id}": {
      "get": {
        "tags": [
          "Test Case"
        ],
        "summary": "Returns a Test Case detail.",
        "operationId": "get_7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestCaseResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/{id}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Returns a Team detail.",
        "operationId": "get_8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResource"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Delete a Team. Returns the delete Team detail.",
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/smart-scheduler/{id}": {
      "get": {
        "summary": "Retrieve the test run list detail",
        "operationId": "get_9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetSmartScheduler"
                }
              }
            }
          }
        },
        "description": "This endpoint returns the test run list detail.",
        "tags": [
          "Schedule"
        ]
      }
    },
    "/api/v1/search/info": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Returns the search configuration.",
        "operationId": "test",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/SearchConfigResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/requests/{id}": {
      "get": {
        "tags": [
          "Execution Request"
        ],
        "summary": "Returns an Execution Request detail.",
        "operationId": "getExecutionRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionRequestResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/requests/{id}/download": {
      "get": {
        "tags": [
          "Execution Request"
        ],
        "summary": "Downloads an Execution Request report. Returns the report file.",
        "operationId": "download_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "har"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/projects/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Returns a Project detail.",
        "operationId": "get_10",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResource"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Deletes a Project. Returns the deleted Project detail.",
        "operationId": "delete_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{id}/check-required-git-repo": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Check is required git repository for a project",
        "operationId": "isRequiredGitRepository",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/platform-projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Returns all Projects of User, include repository information.",
        "operationId": "getByUserWithRepositoryInfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlatformProjectResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/project-settings/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "get_11",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSettingResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}/running-jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "operationId": "getRunningJobs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageJobResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}/latest-jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "operationId": "getLatestJobs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageJobResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}/latest-executions": {
      "get": {
        "operationId": "getLatestExecutions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageExecutionResource"
                }
              }
            }
          }
        },
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/api/v1/labels/system-labels": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "Get all SystemLabel of an LabelEntityType",
        "operationId": "getSystemLabels",
        "parameters": [
          {
            "name": "entityType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "EXECUTION_TEST_RESULT"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemLabelResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/katalon/download": {
      "get": {
        "tags": [
          "Test Report"
        ],
        "operationId": "download_2",
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "win_64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "kse_pe"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/katalon-recorder/backup/{id}/download": {
      "get": {
        "tags": [
          "Katalon Recorder"
        ],
        "summary": "Downloads a Katalon Recorder backup. Returns the backup file.",
        "operationId": "download_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/k8s-agent/{id}": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Returns a K8S agent detail.",
        "operationId": "get_13",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/K8SAgentResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/{id}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Returns a Job detail.",
        "operationId": "get_14",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JobResource"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Cancels a Job.",
        "operationId": "cancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/jobs/{id}/get-log": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Returns a Job's log.",
        "operationId": "getLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuildLog"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/get-job": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Returns the next queued Job of an Agent.",
        "operationId": "getJob",
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JobResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/incidents/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Returns a Task detail.",
        "operationId": "get_15",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentResource"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/git/{testProjectGitId}": {
      "get": {
        "tags": [
          "Test Project"
        ],
        "summary": "Returns a Git Test Project detail.",
        "operationId": "getTestProjectGit",
        "parameters": [
          {
            "name": "testProjectGitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GitRepositoryResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{id}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Downloads a file.",
        "operationId": "download_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/files/upload-urls": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Returns multiple upload URLs.",
        "operationId": "getUploadUrls",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "numberUrl",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/upload-url": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Returns an upload URL.",
        "operationId": "getUploadUrl",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FileResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions": {
      "get": {
        "operationId": "list_2",
        "parameters": [
          {
            "name": "batch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionResource"
                }
              }
            }
          }
        },
        "summary": "Retrieve a test run detail",
        "description": "This endpoint retrieves a test run details.",
        "tags": [
          "Test Runs"
        ]
      },
      "delete": {
        "summary": "Deletes multiple test runs",
        "operationId": "delete_6",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetExecutionResource"
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint deletes multiple test runs and returns the deleted test runs details.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/api/v1/executions/{id}": {
      "get": {
        "summary": "Returns an Execution detail.",
        "operationId": "get_16",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecutionResource"
                }
              }
            }
          }
        },
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/api/v1/executions/{id}/export": {
      "get": {
        "tags": [
          "Execution export"
        ],
        "summary": "Exports and downloads an Execution. Returns the Execution summary file.",
        "operationId": "download_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PDF",
                "CSV",
                "XLSX",
                "ZIP",
                "HAR"
              ],
              "default": "CSV"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/executions/{id}/export/check-exist-file": {
      "get": {
        "tags": [
          "Execution export"
        ],
        "summary": "Find execution exported file",
        "operationId": "checkExistedExportFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PDF",
                "CSV",
                "XLSX",
                "ZIP",
                "HAR"
              ],
              "default": "CSV"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{id}/download": {
      "get": {
        "summary": "Exports and downloads an Execution. Returns the Execution summary file.",
        "operationId": "download_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PDF",
                "CSV",
                "XLSX",
                "ZIP",
                "HAR"
              ],
              "default": "CSV"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": true,
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/api/v1/executions/{id}/download-file": {
      "get": {
        "summary": "Downloads all uploaded files of an Execution. Returns the archive file comprising all Execution's files.",
        "operationId": "downloadFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/api/v1/executions/download": {
      "get": {
        "summary": "Exports and downloads multiple Executions. Returns the archive file comprising the Execution summaries.",
        "operationId": "bulkDownload",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "csv"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/api/v1/execution-test-suites/{id}": {
      "get": {
        "tags": [
          "Execution Test Suite"
        ],
        "summary": "Returns an Execution Test Suite detail.",
        "operationId": "get_17",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionTestSuiteResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/circle-ci-agent/{id}": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Returns a CircleCI agent detail.",
        "operationId": "get_18",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CircleCIAgentResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agent/{id}": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Get a Local agent. Returns the agent detail.",
        "operationId": "get_19",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResource"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Agent"
        ],
        "summary": "Deletes a Local agent. Returns the deleted agent detail.",
        "operationId": "delete_9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/remove": {
      "delete": {
        "tags": [
          "User",
          "Team"
        ],
        "summary": "Removes a User from a Team. Returns the removed User detail.",
        "description": "The user issuing this request must be the Admin of the team.",
        "operationId": "removeUser",
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-cloud/tunnels/{id}": {
      "delete": {
        "tags": [
          "test-cloud-proxy-tunnel-controller"
        ],
        "summary": "Delete Proxy Tunnel.",
        "operationId": "deleteProxyTunnel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteProxyTunnelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProxyTunnelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run-configurations/{id}": {
      "delete": {
        "summary": "Delete a scheduled test run",
        "operationId": "delete_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetRunConfiguration"
                }
              }
            }
          }
        },
        "description": "This endpoint deletes a scheduled test run and returns the deleted test run detail.",
        "tags": [
          "Schedule"
        ]
      }
    },
    "/api/v1/releases/{id}": {
      "delete": {
        "tags": [
          "Release"
        ],
        "summary": "Deletes a Release. Returns the Release details.",
        "operationId": "delete_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cache": {
      "delete": {
        "tags": [
          "cache-resource-controller"
        ],
        "operationId": "delete_7",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/k/test": {
      "get": {
        "summary": "k",
        "tags": [
          "Agent"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-k",
        "x-stoplight": {
          "id": "38v0vfjah3tlf"
        }
      },
      "parameters": []
    },
    "/k": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tuantest/a": {
      "get": {
        "summary": "a",
        "tags": [
          "Agent"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-tuantest-a",
        "x-stoplight": {
          "id": "nwvlpx01x6c09"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "application/pdf": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgentResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "lastPing": {
            "type": "string",
            "format": "date-time"
          },
          "os": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "hostname": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "threshold": {
            "type": "integer",
            "format": "int64"
          },
          "numExecutingJobs": {
            "type": "integer",
            "format": "int32"
          },
          "numAssignedJobs": {
            "type": "integer",
            "format": "int32"
          },
          "agentVersion": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "BaselineCollectionGroupResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "latestVersion": {
            "$ref": "#/components/schemas/BaselineCollectionResource"
          },
          "runConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RunConfigurationResource"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer",
            "format": "int64"
          },
          "lastRun": {
            "$ref": "#/components/schemas/KEyesExecutionResource"
          }
        }
      },
      "BaselineCollectionResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "baselines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaselineResource"
            }
          },
          "numberOfBaselines": {
            "type": "integer",
            "format": "int64"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/UserResource"
          },
          "baselineCollectionGroup": {
            "$ref": "#/components/schemas/BaselineCollectionGroupResource"
          },
          "unsaved": {
            "type": "boolean"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BaselineResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uploadFile": {
            "$ref": "#/components/schemas/UploadFileResource"
          },
          "screenshotId": {
            "type": "integer",
            "format": "int64"
          },
          "execution": {
            "$ref": "#/components/schemas/ExecutionResource"
          },
          "screenshot": {
            "$ref": "#/components/schemas/ScreenshotResource"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "draftIgnoringZones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IgnoringZoneResource"
            }
          },
          "ignoringZones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IgnoringZoneResource"
            }
          }
        }
      },
      "BuildResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          },
          "releaseId": {
            "type": "integer",
            "format": "int64"
          },
          "release": {
            "$ref": "#/components/schemas/ReleaseResource"
          },
          "buildStatistics": {
            "$ref": "#/components/schemas/BuildStatisticsResource"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BuildStatisticsResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "build": {
            "$ref": "#/components/schemas/BuildResource"
          },
          "totalExecution": {
            "type": "integer",
            "format": "int64"
          },
          "totalPassed": {
            "type": "integer",
            "format": "int64"
          },
          "totalFailed": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CircleCIAgentResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "project": {
            "type": "string"
          },
          "vcsType": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "apiKey": {
            "type": "string"
          }
        }
      },
      "ConfigResource": {
        "type": "object",
        "properties": {
          "webSocketUrl": {
            "type": "string"
          },
          "storeUrl": {
            "type": "string"
          },
          "profiles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stripePublicApi": {
            "type": "string"
          },
          "buildVersion": {
            "type": "string"
          },
          "commitId": {
            "type": "string"
          },
          "sentryDsn": {
            "type": "string"
          },
          "sentryEnv": {
            "type": "string"
          },
          "sentryTracesSampleRate": {
            "type": "string"
          },
          "serverUrl": {
            "type": "string"
          },
          "ioServerUrl": {
            "type": "string"
          },
          "proxyTunnelServerUrl": {
            "type": "string"
          },
          "maxExecutionComparison": {
            "type": "integer",
            "format": "int64"
          },
          "maxExecutionDownload": {
            "type": "integer",
            "format": "int64"
          },
          "agentDownloadUrls": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "proxyTunnelDownloadUrls": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "reportUploaderDownloadUrl": {
            "type": "string"
          },
          "reportUploaderLatestVersion": {
            "type": "string"
          },
          "subDomainPattern": {
            "type": "string"
          },
          "cancellationSurveyUrl": {
            "type": "string"
          },
          "launchDarklyClientId": {
            "type": "string"
          },
          "launchDarklyDefaultUser": {
            "type": "string"
          },
          "launchDarklyPrefix": {
            "type": "string"
          },
          "minTestExecutionOrdered": {
            "type": "integer",
            "format": "int64"
          },
          "userFlowToken": {
            "type": "string"
          },
          "demoProjectUrl": {
            "type": "string"
          },
          "usingSubDomain": {
            "type": "boolean"
          },
          "advancedFeatureEnabled": {
            "type": "boolean"
          },
          "frameworksIntegrationEnabled": {
            "type": "boolean"
          },
          "testOpsSubscriptionEnabled": {
            "type": "boolean"
          }
        }
      },
      "EnvironmentVariable": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ExecutionResource": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "PASSED",
              "FAILED",
              "ERROR",
              "INCOMPLETE",
              "RUNNING",
              "SKIPPED",
              "NOT_RUN"
            ]
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "elapsedDuration": {
            "type": "integer",
            "format": "int64"
          },
          "totalTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalPassedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalFailedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalErrorTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalIncompleteTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalSkippedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffPassedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffFailedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffErrorTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffIncompleteTests": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          },
          "buildId": {
            "type": "integer",
            "format": "int64"
          },
          "order": {
            "type": "integer",
            "format": "int64"
          },
          "executionStage": {
            "type": "string",
            "enum": [
              "RUNNING",
              "COMPLETED",
              "TERMINATE",
              "ANALYZING",
              "ANALYZED",
              "IMPORTING",
              "ERROR"
            ]
          },
          "webUrl": {
            "type": "string"
          },
          "testSuiteCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestSuiteCollectionEntityResource"
            }
          },
          "executionTestSuiteResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionTestSuiteResource"
            }
          },
          "release": {
            "$ref": "#/components/schemas/ReleaseResource"
          },
          "build": {
            "$ref": "#/components/schemas/BuildResource"
          },
          "hasComment": {
            "type": "boolean"
          },
          "user": {
            "$ref": "#/components/schemas/UserResource"
          },
          "sessionId": {
            "type": "string"
          },
          "buildLabel": {
            "type": "string"
          },
          "buildUrl": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "KATALON",
              "BDD"
            ]
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobResource"
            }
          },
          "useTestCloudTunnel": {
            "type": "boolean"
          },
          "getkEyesExecution": {
            "$ref": "#/components/schemas/KEyesExecutionResource"
          }
        }
      },
      "GetExecutionResource": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "PASSED",
              "FAILED",
              "ERROR",
              "INCOMPLETE",
              "RUNNING",
              "SKIPPED",
              "NOT_RUN"
            ]
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "elapsedDuration": {
            "type": "integer",
            "format": "int64"
          },
          "totalTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalPassedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalFailedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalErrorTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalIncompleteTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalSkippedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffPassedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffFailedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffErrorTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffIncompleteTests": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "project": {
            "$ref": "#/components/schemas/GetProjectResource"
          },
          "buildId": {
            "type": "integer",
            "format": "int64"
          },
          "order": {
            "type": "integer",
            "format": "int64"
          },
          "executionStage": {
            "type": "string",
            "enum": [
              "RUNNING",
              "COMPLETED",
              "TERMINATE",
              "ANALYZING",
              "ANALYZED",
              "IMPORTING",
              "ERROR"
            ]
          },
          "webUrl": {
            "type": "string"
          },
          "testSuiteCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTestSuiteCollectionEntity"
            }
          },
          "executionTestSuiteResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetExecutionTestSuite"
            }
          },
          "release": {
            "$ref": "#/components/schemas/ReleaseResource"
          },
          "build": {
            "$ref": "#/components/schemas/BuildResource"
          },
          "hasComment": {
            "type": "boolean"
          },
          "user": {
            "$ref": "#/components/schemas/UserResource"
          },
          "sessionId": {
            "type": "string"
          },
          "buildLabel": {
            "type": "string"
          },
          "buildUrl": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "KATALON",
              "BDD"
            ]
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetJobResource"
            }
          },
          "useTestCloudTunnel": {
            "type": "boolean"
          },
          "getkEyesExecution": {
            "$ref": "#/components/schemas/GetKEyesExecution"
          }
        }
      },
      "ExecutionTestCaseResource": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "PASSED",
              "FAILED",
              "ERROR",
              "INCOMPLETE",
              "RUNNING",
              "SKIPPED",
              "NOT_RUN"
            ]
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "elapsedDuration": {
            "type": "integer",
            "format": "int64"
          },
          "totalTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalPassedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalFailedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalErrorTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalIncompleteTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalSkippedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffPassedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffFailedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffErrorTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffIncompleteTests": {
            "type": "integer",
            "format": "int64"
          },
          "executionId": {
            "type": "integer",
            "format": "int64"
          },
          "executionOrder": {
            "type": "integer",
            "format": "int64"
          },
          "testCaseId": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ExecutionTestResultIdentifyResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "executionId": {
            "type": "integer",
            "format": "int64"
          },
          "urlId": {
            "type": "string"
          }
        }
      },
      "ExecutionTestResultResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "testCase": {
            "$ref": "#/components/schemas/TestCaseResource"
          },
          "execution": {
            "$ref": "#/components/schemas/ExecutionResource"
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformResource"
          },
          "status": {
            "type": "string",
            "enum": [
              "PASSED",
              "FAILED",
              "ERROR",
              "INCOMPLETE",
              "RUNNING",
              "SKIPPED",
              "NOT_RUN"
            ]
          },
          "sameStatusPeriod": {
            "type": "integer",
            "format": "int64"
          },
          "errorDetailsId": {
            "type": "integer",
            "format": "int64"
          },
          "stdoutId": {
            "type": "integer",
            "format": "int64"
          },
          "descriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "logId": {
            "type": "integer",
            "format": "int64"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileResource"
            }
          },
          "testResultAssertionsFailed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestResultAssertionFailedResource"
            }
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "sameFailureResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionTestResultIdentifyResource"
            }
          },
          "testSuite": {
            "$ref": "#/components/schemas/TestSuiteResource"
          },
          "executionTestSuite": {
            "$ref": "#/components/schemas/ExecutionTestSuiteResource"
          },
          "incidents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentResource"
            }
          },
          "profile": {
            "type": "string"
          },
          "hasComment": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string"
          },
          "errorDetail": {
            "type": "string"
          },
          "webUrl": {
            "type": "string"
          },
          "externalIssues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalIssueResource"
            }
          },
          "failedTestResultCategory": {
            "type": "string",
            "enum": [
              "APPLICATION",
              "AUTOMATION",
              "ENVIRONMENT",
              "UNKNOWN"
            ]
          },
          "totalTestObject": {
            "type": "integer",
            "format": "int64"
          },
          "totalDefects": {
            "type": "integer",
            "format": "int32"
          },
          "totalAssertion": {
            "type": "integer",
            "format": "int64"
          },
          "passedAssertion": {
            "type": "integer",
            "format": "int64"
          },
          "failedAssertion": {
            "type": "integer",
            "format": "int64"
          },
          "retried": {
            "type": "boolean"
          },
          "lastRetryTestId": {
            "type": "integer",
            "format": "int64"
          },
          "currentRetry": {
            "type": "integer",
            "format": "int64"
          },
          "originalStatus": {
            "type": "string",
            "enum": [
              "PASSED",
              "FAILED",
              "ERROR",
              "INCOMPLETE",
              "RUNNING",
              "SKIPPED",
              "NOT_RUN"
            ]
          },
          "lastChangedBy": {
            "$ref": "#/components/schemas/UserResource"
          },
          "errorKeyword": {
            "type": "string"
          },
          "urlId": {
            "type": "string"
          },
          "statusEdited": {
            "type": "boolean"
          }
        }
      },
      "ExecutionTestSuiteResource": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "PASSED",
              "FAILED",
              "ERROR",
              "INCOMPLETE",
              "RUNNING",
              "SKIPPED",
              "NOT_RUN"
            ]
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "elapsedDuration": {
            "type": "integer",
            "format": "int64"
          },
          "totalTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalPassedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalFailedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalErrorTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalIncompleteTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalSkippedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffPassedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffFailedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffErrorTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiffIncompleteTests": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "execution": {
            "$ref": "#/components/schemas/ExecutionResource"
          },
          "testSuite": {
            "$ref": "#/components/schemas/TestSuiteResource"
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformResource"
          },
          "executionId": {
            "type": "integer",
            "format": "int64"
          },
          "profiles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasComment": {
            "type": "boolean"
          },
          "urlId": {
            "type": "string"
          }
        }
      },
      "GetExecutionTestSuite": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "PASSED",
              "FAILED",
              "ERROR",
              "INCOMPLETE",
              "RUNNING",
              "SKIPPED",
              "NOT_RUN"
            ]
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "elapsedDuration": {
            "type": "integer",
            "format": "int64"
          },
          "totalTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalPassedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalFailedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalErrorTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalIncompleteTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalSkippedTests": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "execution": {
            "$ref": "#/components/schemas/ExecutionResource"
          },
          "testSuite": {
            "$ref": "#/components/schemas/TestSuiteResource"
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformResource"
          },
          "executionId": {
            "type": "integer",
            "format": "int64"
          },
          "profiles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "urlId": {
            "type": "string"
          }
        }
      },
      "ExternalIssueResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "issueId": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "issueTypeIcon": {
            "type": "string"
          },
          "issueTypeName": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "featureName": {
            "type": "string"
          },
          "testCases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCaseResource"
            }
          }
        }
      },
      "ExternalProjectResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "externalProjectId": {
            "type": "string"
          },
          "externalProjectKey": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ExternalReleaseResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "releaseId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "released": {
            "type": "boolean"
          },
          "externalProject": {
            "$ref": "#/components/schemas/ExternalProjectResource"
          },
          "webUrl": {
            "type": "string"
          },
          "jiraReleaseStatus": {
            "type": "string",
            "enum": [
              "RELEASED",
              "UNRELEASED"
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "releaseDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "FileResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uploadFileId": {
            "type": "integer",
            "format": "int64"
          },
          "self": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "uploadUrl": {
            "type": "string"
          },
          "signedUrl": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string"
          }
        }
      },
      "GitRepositoryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "testProjectId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "repository": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "accessKeyId": {
            "type": "string"
          },
          "secretAccessKey": {
            "type": "string"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "vcsType": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "BITBUCKET",
              "OTHERS",
              "AZURE",
              "AWS"
            ]
          },
          "shouldMergeTestResultsForNewScriptRepo": {
            "type": "boolean"
          }
        }
      },
      "GetGitRepository": {
        "type": "object",
        "title": "GetGitRepository",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "testProjectId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "repository": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "vcsType": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "BITBUCKET",
              "OTHERS",
              "AZURE",
              "AWS"
            ]
          },
          "shouldMergeTestResultsForNewScriptRepo": {
            "type": "boolean"
          }
        },
        "x-internal": false
      },
      "IgnoringZoneResource": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "x": {
            "type": "integer",
            "format": "int64"
          },
          "y": {
            "type": "integer",
            "format": "int64"
          },
          "w": {
            "type": "integer",
            "format": "int64"
          },
          "h": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": [
              "ALL",
              "SINGLE"
            ]
          }
        }
      },
      "IncidentResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "urlIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "executionTestResultIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "order": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "JobResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "buildNumber": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "QUEUED",
              "RUNNING",
              "FAILED",
              "SUCCESS",
              "CANCELED",
              "ERROR",
              "WAIT_FOR_TRIGGER",
              "EXPIRED"
            ]
          },
          "queuedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "stopTime": {
            "type": "string",
            "format": "date-time"
          },
          "testProject": {
            "$ref": "#/components/schemas/TestProjectResource"
          },
          "execution": {
            "$ref": "#/components/schemas/ExecutionResource"
          },
          "agent": {
            "$ref": "#/components/schemas/AgentResource"
          },
          "testCloudAgent": {
            "$ref": "#/components/schemas/TestCloudAgentResource"
          },
          "k8sAgent": {
            "$ref": "#/components/schemas/K8SAgentResource"
          },
          "circleCiAgent": {
            "$ref": "#/components/schemas/CircleCIAgentResource"
          },
          "runConfiguration": {
            "$ref": "#/components/schemas/RunConfigurationResource"
          },
          "order": {
            "type": "integer",
            "format": "int64"
          },
          "parameter": {
            "$ref": "#/components/schemas/TriggerBuildParameter"
          },
          "triggerBy": {
            "type": "string",
            "enum": [
              "MANUAL",
              "SCHEDULE"
            ]
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "triggerAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserResource"
          },
          "scheduler": {
            "$ref": "#/components/schemas/SchedulerResource"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          },
          "processId": {
            "type": "integer",
            "format": "int64"
          },
          "nodeStatus": {
            "type": "string",
            "enum": [
              "PENDING_CANCELED",
              "CANCELED"
            ]
          },
          "runConfigurationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetJobResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "buildNumber": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "QUEUED",
              "RUNNING",
              "FAILED",
              "SUCCESS",
              "CANCELED",
              "ERROR",
              "WAIT_FOR_TRIGGER",
              "EXPIRED"
            ]
          },
          "queuedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "stopTime": {
            "type": "string",
            "format": "date-time"
          },
          "testProject": {
            "$ref": "#/components/schemas/GetTestProject"
          },
          "execution": {
            "$ref": "#/components/schemas/ExecutionResource"
          },
          "agent": {
            "$ref": "#/components/schemas/AgentResource"
          },
          "testCloudAgent": {
            "$ref": "#/components/schemas/TestCloudAgentResource"
          },
          "k8sAgent": {
            "$ref": "#/components/schemas/K8SAgentResource"
          },
          "circleCiAgent": {
            "$ref": "#/components/schemas/CircleCIAgentResource"
          },
          "runConfiguration": {
            "$ref": "#/components/schemas/RunConfigurationResource"
          },
          "order": {
            "type": "integer",
            "format": "int64"
          },
          "triggerBy": {
            "type": "string",
            "enum": [
              "MANUAL",
              "SCHEDULE"
            ]
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "triggerAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserResource"
          },
          "scheduler": {
            "$ref": "#/components/schemas/GetSmartScheduler"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          },
          "processId": {
            "type": "integer",
            "format": "int64"
          },
          "nodeStatus": {
            "type": "string",
            "enum": [
              "PENDING_CANCELED",
              "CANCELED"
            ]
          },
          "runConfigurationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "K8SAgentResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "certificateAuthority": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "cluster": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "accessKey": {
            "type": "string"
          },
          "privateAccessKey": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "apiKey": {
            "type": "string"
          },
          "authenticationType": {
            "type": "string",
            "enum": [
              "BASIC_AUTH",
              "BEARER_TOKEN",
              "EKS_AUTH"
            ]
          }
        }
      },
      "KEyesExecutionResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "RUNNING",
              "ANALYSING",
              "UNRESOLVED",
              "PASSED",
              "FAILED"
            ]
          },
          "execution": {
            "$ref": "#/components/schemas/ExecutionResource"
          },
          "totalCheckpoints": {
            "type": "integer",
            "format": "int64"
          },
          "passedCheckpoints": {
            "type": "integer",
            "format": "int64"
          },
          "failedCheckpoints": {
            "type": "integer",
            "format": "int64"
          },
          "unresolvedCheckpoints": {
            "type": "integer",
            "format": "int64"
          },
          "unsaved": {
            "type": "boolean"
          },
          "baselineCollection": {
            "$ref": "#/components/schemas/BaselineCollectionResource"
          }
        }
      },
      "GetKEyesExecution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "RUNNING",
              "ANALYSING",
              "UNRESOLVED",
              "PASSED",
              "FAILED"
            ]
          },
          "execution": {
            "$ref": "#/components/schemas/GetExecutionResource"
          },
          "totalCheckpoints": {
            "type": "integer",
            "format": "int64"
          },
          "passedCheckpoints": {
            "type": "integer",
            "format": "int64"
          },
          "failedCheckpoints": {
            "type": "integer",
            "format": "int64"
          },
          "unresolvedCheckpoints": {
            "type": "integer",
            "format": "int64"
          },
          "unsaved": {
            "type": "boolean"
          }
        }
      },
      "KSFile": {
        "type": "object",
        "properties": {
          "contentUrl": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "writeMode": {
            "type": "string",
            "enum": [
              "OVERRIDE",
              "SKIP_IF_EXISTS"
            ]
          }
        }
      },
      "OrganizationFeatureFlagResource": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "integer",
            "format": "int64"
          },
          "subDomain": {
            "type": "boolean"
          },
          "strictDomain": {
            "type": "boolean"
          },
          "sso": {
            "type": "boolean"
          },
          "whitelistIp": {
            "type": "boolean"
          },
          "circleCi": {
            "type": "boolean",
            "deprecated": true
          },
          "testOpsIntegration": {
            "type": "boolean"
          }
        }
      },
      "OrganizationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "OWNER",
              "ADMIN",
              "USER",
              "BILLING_MANAGER"
            ]
          },
          "orgFeatureFlag": {
            "$ref": "#/components/schemas/OrganizationFeatureFlagResource"
          },
          "quotaKSE": {
            "type": "integer",
            "format": "int64"
          },
          "machineQuotaKSE": {
            "type": "integer",
            "format": "int64"
          },
          "quotaUnlimitedKSE": {
            "type": "integer",
            "format": "int64"
          },
          "quotaEngine": {
            "type": "integer",
            "format": "int64"
          },
          "machineQuotaEngine": {
            "type": "integer",
            "format": "int64"
          },
          "quotaUnlimitedEngine": {
            "type": "integer",
            "format": "int64"
          },
          "usedKSE": {
            "type": "integer",
            "format": "int64"
          },
          "usedUnlimitedKSE": {
            "type": "integer",
            "format": "int64"
          },
          "usedEngine": {
            "type": "integer",
            "format": "int64"
          },
          "usedUnlimitedEngine": {
            "type": "integer",
            "format": "int64"
          },
          "quotaTestOps": {
            "type": "integer",
            "format": "int64"
          },
          "usedTestOps": {
            "type": "integer",
            "format": "int64"
          },
          "numberUser": {
            "type": "integer",
            "format": "int64"
          },
          "quotaFloatingEngine": {
            "type": "integer",
            "format": "int64"
          },
          "usedFloatingEngine": {
            "type": "integer",
            "format": "int64"
          },
          "canCreateOfflineKSE": {
            "type": "boolean"
          },
          "canCreateOfflineUnlimitedKSE": {
            "type": "boolean"
          },
          "canCreateOfflineRE": {
            "type": "boolean"
          },
          "canCreateOfflineUnlimitedEngine": {
            "type": "boolean"
          },
          "subscriptionExpiryDateEngine": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionExpiryDateUnlimitedEngine": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionExpiryDateKSE": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionExpiryDateUnlimitedKSE": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionExpiryDateFloatingEngine": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionExpiryDateTestOps": {
            "type": "string",
            "format": "date-time"
          },
          "subscribed": {
            "type": "boolean"
          },
          "ksePaygo": {
            "type": "boolean"
          },
          "krePaygo": {
            "type": "boolean"
          },
          "paygoQuota": {
            "type": "integer",
            "format": "int64"
          },
          "domain": {
            "type": "string"
          },
          "subdomainUrl": {
            "type": "string"
          },
          "strictDomain": {
            "type": "boolean"
          },
          "logoUrl": {
            "type": "string"
          },
          "samlSSO": {
            "type": "boolean"
          },
          "kreLicense": {
            "type": "boolean"
          },
          "mostRecentProjectAccessedAt": {
            "type": "string",
            "format": "date-time"
          },
          "testOpsFeature": {
            "type": "string",
            "enum": [
              "KSE",
              "ENGINE",
              "TESTOPS",
              "FLOATING_ENGINE",
              "UNLIMITED_KSE",
              "UNLIMITED_ENGINE",
              "TESTOPS_BUSINESS",
              "TESTOPS_ENTERPRISE",
              "PER_USER_KSE",
              "TESTCLOUD_MINUTE",
              "TESTCLOUD_SESSION_WEB",
              "VISUAL_TESTING_PRO",
              "TESTOPS_PLATFORM"
            ]
          },
          "platformFeature": {
            "type": "string",
            "enum": [
              "KSE",
              "ENGINE",
              "TESTOPS",
              "FLOATING_ENGINE",
              "UNLIMITED_KSE",
              "UNLIMITED_ENGINE",
              "TESTOPS_BUSINESS",
              "TESTOPS_ENTERPRISE",
              "PER_USER_KSE",
              "TESTCLOUD_MINUTE",
              "TESTCLOUD_SESSION_WEB",
              "VISUAL_TESTING_PRO",
              "TESTOPS_PLATFORM"
            ]
          },
          "tier": {
            "type": "string",
            "enum": [
              "FREE",
              "PROFESSIONAL",
              "BUSINESS",
              "ENTERPRISE"
            ]
          },
          "requestedUserVerified": {
            "type": "boolean"
          }
        }
      },
      "PlatformResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "osName": {
            "type": "string"
          },
          "osVersion": {
            "type": "string"
          },
          "browserName": {
            "type": "string"
          },
          "browserVersion": {
            "type": "string"
          },
          "deviceName": {
            "type": "string"
          },
          "appName": {
            "type": "string"
          }
        }
      },
      "ProjectResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "team": {
            "$ref": "#/components/schemas/TeamResource"
          },
          "timezone": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ARCHIVE",
              "ACTIVE"
            ]
          }
        }
      },
      "GetProjectResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "team": {
            "$ref": "#/components/schemas/GetTeamResource"
          },
          "timezone": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ARCHIVE",
              "ACTIVE"
            ]
          }
        },
        "title": ""
      },
      "ReleaseResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date"
          },
          "endTime": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "closed": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalRelease": {
            "$ref": "#/components/schemas/ExternalReleaseResource"
          },
          "releaseStatistics": {
            "$ref": "#/components/schemas/ReleaseStatisticsResource"
          },
          "builds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildResource"
            }
          },
          "releaseStatus": {
            "type": "string",
            "enum": [
              "NOT_READY",
              "READY",
              "EMPTY"
            ]
          }
        }
      },
      "ReleaseStatisticsResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "release": {
            "$ref": "#/components/schemas/ReleaseResource"
          },
          "totalPassed": {
            "type": "integer",
            "format": "int64"
          },
          "totalFailed": {
            "type": "integer",
            "format": "int64"
          },
          "totalExecution": {
            "type": "integer",
            "format": "int64"
          },
          "totalDefect": {
            "type": "integer",
            "format": "int64"
          },
          "totalDuration": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RunConfigurationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "command": {
            "type": "string"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "testProjectId": {
            "type": "integer",
            "format": "int64"
          },
          "releaseId": {
            "type": "integer",
            "format": "int64"
          },
          "testSuiteCollectionId": {
            "type": "integer",
            "format": "int64"
          },
          "testSuiteId": {
            "type": "integer",
            "format": "int64"
          },
          "executionProfileId": {
            "type": "integer",
            "format": "int64"
          },
          "baselineCollectionGroupOrder": {
            "type": "integer",
            "format": "int64"
          },
          "timeOut": {
            "type": "integer",
            "format": "int64"
          },
          "kobitonDeviceId": {
            "type": "string"
          },
          "configType": {
            "type": "string",
            "enum": [
              "TSC",
              "COMMAND",
              "GENERIC_COMMAND",
              "TEST_SUITE"
            ]
          },
          "testProject": {
            "$ref": "#/components/schemas/TestProjectResource"
          },
          "agents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentResource"
            }
          },
          "testCloudAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCloudAgentResource"
            }
          },
          "k8sAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/K8SAgentResource"
            }
          },
          "circleCIAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CircleCIAgentResource"
            }
          },
          "testCloudTestSuiteCollectionAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCloudTestSuiteCollectionAgentResource"
            }
          },
          "cloudType": {
            "type": "string",
            "enum": [
              "K8S",
              "LOCAL_AGENT",
              "K8S_AGENT",
              "CIRCLE_CI_AGENT",
              "TEST_CLOUD_AGENT"
            ]
          },
          "latestJob": {
            "$ref": "#/components/schemas/JobResource"
          },
          "genericCommand": {
            "type": "string"
          },
          "ksVersion": {
            "type": "string"
          },
          "ksLocation": {
            "type": "string"
          },
          "nextRunScheduler": {
            "$ref": "#/components/schemas/SchedulerResource"
          },
          "release": {
            "$ref": "#/components/schemas/ReleaseResource"
          },
          "build": {
            "$ref": "#/components/schemas/BuildResource"
          },
          "executionMode": {
            "type": "string",
            "enum": [
              "SEQUENTIAL",
              "PARALLEL"
            ]
          },
          "enabledKobitonIntegration": {
            "type": "boolean"
          },
          "enabledTestCloudTunnel": {
            "type": "boolean"
          },
          "triggerMode": {
            "type": "string",
            "enum": [
              "TESTOPS_SCHEDULER",
              "MANUAL_TRIGGER"
            ]
          },
          "browserType": {
            "type": "string",
            "enum": [
              "CHROME",
              "FIREFOX",
              "SAFARI",
              "EDGE",
              "EDGE_CHROMIUM",
              "WEB_SERVICE",
              "CHROME_HEADLESS",
              "FIREFOX_HEADLESS",
              "ALL",
              "MOBILE_BROWSERS",
              "MOBILE_NATIVE"
            ]
          }
        }
      },
      "GetRunConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "command": {
            "type": "string"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "testProjectId": {
            "type": "integer",
            "format": "int64"
          },
          "releaseId": {
            "type": "integer",
            "format": "int64"
          },
          "testSuiteCollectionId": {
            "type": "integer",
            "format": "int64"
          },
          "testSuiteId": {
            "type": "integer",
            "format": "int64"
          },
          "executionProfileId": {
            "type": "integer",
            "format": "int64"
          },
          "baselineCollectionGroupOrder": {
            "type": "integer",
            "format": "int64"
          },
          "timeOut": {
            "type": "integer",
            "format": "int64"
          },
          "kobitonDeviceId": {
            "type": "string"
          },
          "configType": {
            "type": "string",
            "enum": [
              "TSC",
              "COMMAND",
              "GENERIC_COMMAND",
              "TEST_SUITE"
            ]
          },
          "testProject": {
            "$ref": "#/components/schemas/GetTestProject"
          },
          "agents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentResource"
            }
          },
          "testCloudAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCloudAgentResource"
            }
          },
          "k8sAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/K8SAgentResource"
            }
          },
          "circleCIAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CircleCIAgentResource"
            }
          },
          "testCloudTestSuiteCollectionAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCloudTestSuiteCollectionAgentResource"
            }
          },
          "cloudType": {
            "type": "string",
            "enum": [
              "K8S",
              "LOCAL_AGENT",
              "K8S_AGENT",
              "CIRCLE_CI_AGENT",
              "TEST_CLOUD_AGENT"
            ]
          },
          "latestJob": {
            "$ref": "#/components/schemas/JobResource"
          },
          "genericCommand": {
            "type": "string"
          },
          "ksVersion": {
            "type": "string"
          },
          "ksLocation": {
            "type": "string"
          },
          "nextRunScheduler": {
            "$ref": "#/components/schemas/SchedulerResource"
          },
          "release": {
            "$ref": "#/components/schemas/ReleaseResource"
          },
          "build": {
            "$ref": "#/components/schemas/BuildResource"
          },
          "executionMode": {
            "type": "string",
            "enum": [
              "SEQUENTIAL",
              "PARALLEL"
            ]
          },
          "enabledKobitonIntegration": {
            "type": "boolean"
          },
          "enabledTestCloudTunnel": {
            "type": "boolean"
          },
          "triggerMode": {
            "type": "string",
            "enum": [
              "TESTOPS_SCHEDULER",
              "MANUAL_TRIGGER"
            ]
          },
          "browserType": {
            "type": "string",
            "enum": [
              "CHROME",
              "FIREFOX",
              "SAFARI",
              "EDGE",
              "EDGE_CHROMIUM",
              "WEB_SERVICE",
              "CHROME_HEADLESS",
              "FIREFOX_HEADLESS",
              "ALL",
              "MOBILE_BROWSERS",
              "MOBILE_NATIVE"
            ]
          }
        }
      },
      "SchedulerResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "nextTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "active": {
            "type": "boolean"
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "intervalUnit": {
            "type": "string",
            "enum": [
              "MINUTE",
              "HOUR",
              "DAY",
              "WEEK",
              "MONTH"
            ]
          },
          "runConfigurationId": {
            "type": "integer",
            "format": "int64"
          },
          "runConfiguration": {
            "$ref": "#/components/schemas/RunConfigurationResource"
          },
          "exceededLimitTime": {
            "type": "boolean"
          }
        }
      },
      "ScreenshotResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TeamResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "OWNER",
              "ADMIN",
              "USER"
            ]
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResource"
            }
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationResource"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetTeamResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "OWNER",
              "ADMIN",
              "USER"
            ]
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationResource"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TestCasePlatformStatisticsResource": {
        "type": "object",
        "properties": {
          "totalTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalPassedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalFailedTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalErrorTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalIncompleteTests": {
            "type": "integer",
            "format": "int64"
          },
          "totalSkippedTests": {
            "type": "integer",
            "format": "int64"
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformResource"
          },
          "platformId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TestCaseResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "previousStatus": {
            "type": "string",
            "enum": [
              "PASSED",
              "FAILED",
              "ERROR",
              "INCOMPLETE",
              "RUNNING",
              "SKIPPED",
              "NOT_RUN"
            ]
          },
          "alias": {
            "type": "string"
          },
          "testModuleId": {
            "type": "integer",
            "format": "int64"
          },
          "webUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          },
          "lastExecutionTestCase": {
            "$ref": "#/components/schemas/ExecutionTestCaseResource"
          },
          "externalIssues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalIssueResource"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "TEST_CASE",
              "SCENARIO"
            ]
          },
          "averageDuration": {
            "type": "number",
            "format": "double"
          },
          "maxDuration": {
            "type": "integer",
            "format": "int64"
          },
          "minDuration": {
            "type": "integer",
            "format": "int64"
          },
          "flakiness": {
            "type": "number",
            "format": "double"
          },
          "platformStatistics": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TestCasePlatformStatisticsResource"
            }
          },
          "maintainer": {
            "$ref": "#/components/schemas/UserResource"
          },
          "testResultAssertion": {
            "$ref": "#/components/schemas/TestResultAssertionResource"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "testProject": {
            "$ref": "#/components/schemas/TestProjectResource"
          },
          "numberOfExecutions": {
            "type": "integer",
            "format": "int64"
          },
          "urlId": {
            "type": "string"
          }
        }
      },
      "TestCloudAgentResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "os": {
            "type": "string"
          },
          "osVersion": {
            "type": "string"
          },
          "browser": {
            "type": "string"
          },
          "browserVersion": {
            "type": "string"
          },
          "deviceName": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "appGroupId": {
            "type": "string"
          },
          "appName": {
            "type": "string"
          },
          "numExecutingJobs": {
            "type": "integer",
            "format": "int32"
          },
          "numAssignedJobs": {
            "type": "integer",
            "format": "int32"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "deleted": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string"
          },
          "totalDuration": {
            "type": "integer",
            "format": "int64"
          },
          "headless": {
            "type": "boolean"
          }
        }
      },
      "TestCloudTestSuiteCollectionAgentResource": {
        "type": "object",
        "properties": {
          "testSuiteCollectionConfigurationId": {
            "type": "integer",
            "format": "int64"
          },
          "testCloudAgent": {
            "$ref": "#/components/schemas/TestCloudAgentResource"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TestFolderResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "rawPath": {
            "type": "string"
          },
          "testProject": {
            "$ref": "#/components/schemas/TestProjectResource"
          },
          "treePath": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TestProjectResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "defaultTestProject": {
            "type": "boolean"
          },
          "uploadFileId": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "latestJob": {
            "$ref": "#/components/schemas/JobResource"
          },
          "uploadFileName": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "KS",
              "GIT"
            ]
          },
          "gitRepository": {
            "$ref": "#/components/schemas/GitRepositoryResource"
          },
          "testSuiteCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestSuiteCollectionResource"
            }
          },
          "dirty": {
            "type": "boolean"
          }
        }
      },
      "GetTestProject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "defaultTestProject": {
            "type": "boolean"
          },
          "uploadFileId": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "latestJob": {
            "$ref": "#/components/schemas/JobResource"
          },
          "uploadFileName": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "KS",
              "GIT"
            ]
          },
          "gitRepository": {
            "$ref": "#/components/schemas/GetGitRepository"
          },
          "testSuiteCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestSuiteCollectionResource"
            }
          },
          "dirty": {
            "type": "boolean"
          }
        }
      },
      "TestResultAssertionFailedResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "executionTestResultId": {
            "type": "integer",
            "format": "int64"
          },
          "executionTestResultResource": {
            "$ref": "#/components/schemas/ExecutionTestResultResource"
          },
          "stacktrace": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "logTime": {
            "type": "string"
          }
        }
      },
      "TestResultAssertionResource": {
        "type": "object",
        "properties": {
          "executionTestResultId": {
            "type": "integer",
            "format": "int64"
          },
          "executionTestResult": {
            "$ref": "#/components/schemas/ExecutionTestResultResource"
          },
          "totalAssertion": {
            "type": "integer",
            "format": "int64"
          },
          "passedAssertion": {
            "type": "integer",
            "format": "int64"
          },
          "failedAssertion": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TestSuiteCollectionConfigurationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "profileName": {
            "type": "string"
          },
          "browserType": {
            "type": "string",
            "enum": [
              "CHROME",
              "FIREFOX",
              "SAFARI",
              "EDGE",
              "EDGE_CHROMIUM",
              "WEB_SERVICE",
              "CHROME_HEADLESS",
              "FIREFOX_HEADLESS",
              "ALL",
              "MOBILE_BROWSERS",
              "MOBILE_NATIVE"
            ]
          },
          "runEnabled": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "testSuiteEntity": {
            "type": "string"
          }
        }
      },
      "TestSuiteCollectionEntityResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          },
          "path": {
            "type": "string"
          },
          "urlId": {
            "type": "string"
          }
        }
      },
      "GetTestSuiteCollectionEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/GetProjectResource"
          },
          "path": {
            "type": "string"
          },
          "urlId": {
            "type": "string"
          }
        }
      },
      "TestSuiteCollectionResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          },
          "testSuiteCollectionConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestSuiteCollectionConfigurationResource"
            }
          },
          "urlId": {
            "type": "string"
          }
        }
      },
      "TestSuiteResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "testResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionTestResultResource"
            }
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          },
          "alias": {
            "type": "string"
          },
          "lastExecutionTestSuite": {
            "$ref": "#/components/schemas/ExecutionTestSuiteResource"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "testCases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCaseResource"
            }
          },
          "testProject": {
            "$ref": "#/components/schemas/TestProjectResource"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserResource"
          },
          "type": {
            "type": "string",
            "enum": [
              "KATALON_STUDIO",
              "TESTOPS"
            ]
          },
          "testFolder": {
            "$ref": "#/components/schemas/TestFolderResource"
          },
          "urlId": {
            "type": "string"
          }
        }
      },
      "CreateTestSuiteResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          },
          "alias": {
            "type": "string"
          },
          "lastExecutionTestSuite": {
            "$ref": "#/components/schemas/ExecutionTestSuiteResource"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "testProject": {
            "$ref": "#/components/schemas/GetTestProject"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": [
              "KATALON_STUDIO",
              "TESTOPS"
            ]
          },
          "testFolder": {
            "$ref": "#/components/schemas/TestFolderResource"
          },
          "urlId": {
            "type": "string"
          }
        }
      },
      "GetTestSuiteResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          },
          "alias": {
            "type": "string"
          },
          "lastExecutionTestSuite": {
            "$ref": "#/components/schemas/ExecutionTestSuiteResource"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "testProject": {
            "$ref": "#/components/schemas/GetTestProject"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": [
              "KATALON_STUDIO",
              "TESTOPS"
            ]
          },
          "urlId": {
            "type": "string"
          }
        }
      },
      "TriggerBuildParameter": {
        "type": "object",
        "properties": {
          "downloadUrl": {
            "type": "string"
          },
          "command": {
            "type": "string"
          },
          "environmentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            }
          },
          "sessionId": {
            "type": "string"
          },
          "ksVersion": {
            "type": "string"
          },
          "ksLocation": {
            "type": "string"
          },
          "configType": {
            "type": "string",
            "enum": [
              "TSC",
              "COMMAND",
              "GENERIC_COMMAND",
              "TEST_SUITE"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "KS",
              "GIT"
            ]
          },
          "gitRepositoryResource": {
            "$ref": "#/components/schemas/GitRepositoryResource"
          },
          "testOpsDownloadUrl": {
            "type": "string"
          },
          "extraFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KSFile"
            }
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UploadFileResource": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "TSC_EXECUTION",
              "TS_EXECUTION",
              "ATTACHMENT",
              "PROPERTIES",
              "HAR",
              "UUID",
              "ZIP",
              "BDD",
              "TESTOPS_REPORT_METADATA",
              "TESTOPS_REPORT_EXECUTION",
              "TESTOPS_REPORT_SUITES",
              "TESTOPS_REPORT_RESULTS"
            ]
          },
          "base64Content": {
            "type": "string"
          },
          "fileHandleId": {
            "type": "integer",
            "format": "int64"
          },
          "thumbnailId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserOrganizationFeatureResource": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserResource"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          },
          "userEmail": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationResource"
          },
          "feature": {
            "type": "string",
            "enum": [
              "KSE",
              "ENGINE",
              "TESTOPS",
              "FLOATING_ENGINE",
              "UNLIMITED_KSE",
              "UNLIMITED_ENGINE",
              "TESTOPS_BUSINESS",
              "TESTOPS_ENTERPRISE",
              "PER_USER_KSE",
              "TESTCLOUD_MINUTE",
              "TESTCLOUD_SESSION_WEB",
              "VISUAL_TESTING_PRO",
              "TESTOPS_PLATFORM"
            ]
          }
        }
      },
      "UserResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "invitingUrl": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "configs": {
            "$ref": "#/components/schemas/ConfigResource"
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResource"
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamResource"
            }
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationResource"
            }
          },
          "organizationFeature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserOrganizationFeatureResource"
            }
          },
          "trialExpirationDate": {
            "type": "string",
            "format": "date-time"
          },
          "systemRole": {
            "type": "string",
            "enum": [
              "USER",
              "KATALON_ADMIN"
            ]
          },
          "surveyStatus": {
            "type": "string",
            "enum": [
              "NOT_SUBMITTED",
              "SUBMITTED",
              "SKIPPED",
              "OLD_USER"
            ]
          },
          "sessionTimeout": {
            "type": "integer",
            "format": "int64"
          },
          "businessUser": {
            "type": "boolean"
          },
          "canCreateOfflineKSE": {
            "type": "boolean"
          },
          "canCreateOfflineRE": {
            "type": "boolean"
          },
          "samlSSO": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "fullName": {
            "type": "string"
          }
        }
      },
      "BuildInfo": {
        "type": "object",
        "properties": {
          "build_num": {
            "type": "integer",
            "format": "int64"
          },
          "job_id": {
            "type": "integer",
            "format": "int64"
          },
          "build_time_millis": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          },
          "usage_queued_at": {
            "type": "string",
            "format": "date-time"
          },
          "start_time": {
            "type": "string",
            "format": "date-time"
          },
          "stop_time": {
            "type": "string",
            "format": "date-time"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildLog"
            }
          }
        }
      },
      "BuildLog": {
        "type": "object",
        "properties": {
          "logFileUrl": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "actions": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserTeamResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string",
            "enum": [
              "OWNER",
              "ADMIN",
              "USER"
            ]
          }
        }
      },
      "CommentResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "objectId": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "objectType": {
            "type": "string",
            "enum": [
              "EXECUTION_TEST_SUITE",
              "EXECUTION_TEST_RESULT",
              "TEST_CASE",
              "INCIDENT",
              "KEYES_EXECUTION",
              "XRAY_TEST_CASE",
              "EXECUTION"
            ]
          },
          "email": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "displayAvatar": {
            "type": "string"
          },
          "bySystem": {
            "type": "boolean"
          }
        }
      },
      "UserSettingResource": {
        "type": "object",
        "properties": {
          "mailJobStart": {
            "type": "boolean"
          },
          "mailJobEnd": {
            "type": "boolean"
          },
          "mailExecution": {
            "type": "boolean"
          },
          "mailExecutionStatus": {
            "type": "string"
          },
          "mailWeeklyUpdate": {
            "type": "boolean"
          }
        }
      },
      "UploadBatchFileResource": {
        "type": "object",
        "properties": {
          "folderPath": {
            "type": "string"
          },
          "end": {
            "type": "boolean"
          },
          "fileName": {
            "type": "string"
          },
          "uploadedPath": {
            "type": "string"
          },
          "fullPath": {
            "type": "string"
          }
        }
      },
      "UploadBatchResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "done": {
            "type": "boolean"
          },
          "webUrl": {
            "type": "string"
          }
        }
      },
      "RetestedTestResultResource": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "SystemLabelResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "entityType": {
            "type": "string",
            "enum": [
              "EXECUTION_TEST_RESULT"
            ]
          }
        }
      },
      "LabelResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "entityType": {
            "type": "string",
            "enum": [
              "EXECUTION_TEST_RESULT"
            ]
          },
          "systemLabel": {
            "$ref": "#/components/schemas/SystemLabelResource"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IncidentExecutionTestResultResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "incidentId": {
            "type": "integer",
            "format": "int64"
          },
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "incidentOrder": {
            "type": "integer",
            "format": "int64"
          },
          "executionTestResultId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SmartSchedulerResource": {
        "type": "object",
        "properties": {
          "runConfiguration": {
            "$ref": "#/components/schemas/RunConfigurationResource"
          },
          "scheduler": {
            "$ref": "#/components/schemas/SchedulerResource"
          }
        }
      },
      "GetSmartScheduler": {
        "type": "object",
        "properties": {
          "runConfiguration": {
            "$ref": "#/components/schemas/GetRunConfiguration"
          },
          "scheduler": {
            "$ref": "#/components/schemas/SchedulerResource"
          }
        }
      },
      "SearchRequest": {
        "type": "object",
        "properties": {
          "searchRequestConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchRequestCondition"
            }
          },
          "searchRequestPagination": {
            "$ref": "#/components/schemas/SearchRequestPagination"
          },
          "searchRequestGroupBys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "searchRequestFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchRequestFunction"
            }
          },
          "type": {
            "type": "string"
          },
          "searchEntity": {
            "type": "string",
            "enum": [
              "Execution",
              "TestRunPlanning",
              "ExecutionTestSuite",
              "ExecutionStatistics",
              "ExecutionTestModule",
              "ExecutionTestResult",
              "ExecutionRequest",
              "Incident",
              "TestCase",
              "TestSuite",
              "ExecutionTestStep",
              "TestProject",
              "Job",
              "RunningTestRun",
              "Project",
              "ApiKey",
              "Comment",
              "Team",
              "Organization",
              "UserOrganization",
              "UserTeam",
              "UserInvitation",
              "UserSsoInvitation",
              "UserConfiguration",
              "Agent",
              "TestCloudAgent",
              "TestCloudEnvironments",
              "TestCloudMobileDevices",
              "RunConfiguration",
              "Release",
              "Build",
              "TestObject",
              "TestObjectEntity",
              "TestCaseExecution",
              "TestCaseExecutionStatus",
              "BuildStatistics",
              "ReleaseStatisticsStatus",
              "TestCaseExecutionComparison",
              "TestCaseExecutionComparisonStatistics",
              "TestCasePlatformStatistics",
              "Scheduler",
              "ExecutionAnalysis",
              "ExecutionTestResultCategory",
              "ExecutionTestResultGroup",
              "ExecutionTestResultTestObjectEntity",
              "ExecutionFile",
              "TestSuiteCollection",
              "TestSuiteCollectionEntity",
              "TestCasePriority",
              "ExternalConnection",
              "PlatformStatistics",
              "TestProjectFile",
              "ProjectStatistics",
              "ProjectRequirementStatistic",
              "TestCaseRequirementStatistic",
              "UserOrganizationFeature",
              "Machine",
              "LicenseKey",
              "K8SAgent",
              "CircleCiAgent",
              "JobSummary",
              "KatalonRecorderBackup",
              "ExternalDefect",
              "ExternalRequirement",
              "ExternalXrayTest",
              "ExternalTraceability",
              "RequirementTestRunCoverage",
              "WhitelistIp",
              "KsSession",
              "CiDashboardStatistics",
              "Checkpoint",
              "KeyesExecution",
              "RecentProject",
              "JiraIssue",
              "SlackConnection",
              "KobitonConnection",
              "Baseline",
              "BaselineCollection",
              "TestCaseFlakiness",
              "SimilarFailure",
              "TestCloudTunnel",
              "Notification",
              "TestFolder",
              "TestSuiteTestCase",
              "ExecutionProfile",
              "LastExecutionTestResultStatistics",
              "TestCaseFlakinessStatistics",
              "ProjectStatisticsCustomizeTime",
              "CheckpointLayout",
              "CheckpointContent",
              "BaselineCollectionGroup",
              "LabelLink",
              "TestSuiteCollectionConfiguration"
            ]
          },
          "timeZone": {
            "type": "string"
          }
        }
      },
      "SearchRequestCondition": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "SearchRequestFunction": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "functionName": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timeZone": {
            "type": "string"
          }
        }
      },
      "SearchRequestPagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchRequestSortOrder"
            }
          }
        }
      },
      "SearchRequestSortOrder": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "order": {
            "type": "string"
          }
        }
      },
      "BaseResource": {
        "type": "object"
      },
      "PageBaseResource": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseResource"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ProjectSettingResource": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "bdd": {
            "type": "boolean"
          }
        }
      },
      "ProjectConfigurationResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "TIMEZONE",
              "ASSERTION_PATTERN",
              "DEFAULT_TEST_PROJECT"
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "OrganizationTrialRequestResource": {
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/OrganizationResource"
          },
          "userRequest": {
            "$ref": "#/components/schemas/UserResource"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "APPROVED",
              "REJECTED"
            ]
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "formRequest": {
            "type": "string"
          },
          "feature": {
            "type": "string",
            "enum": [
              "KSE",
              "ENGINE",
              "TESTOPS",
              "FLOATING_ENGINE",
              "UNLIMITED_KSE",
              "UNLIMITED_ENGINE",
              "TESTOPS_BUSINESS",
              "TESTOPS_ENTERPRISE",
              "PER_USER_KSE",
              "TESTCLOUD_MINUTE",
              "TESTCLOUD_SESSION_WEB",
              "VISUAL_TESTING_PRO",
              "TESTOPS_PLATFORM"
            ]
          }
        }
      },
      "TestRunResult": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "testSuiteId": {
            "type": "string"
          },
          "end": {
            "type": "boolean"
          }
        }
      },
      "ExecutionShareReportResource": {
        "type": "object",
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "executionId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CircleCIConnectionResource": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "project": {
            "type": "string"
          },
          "vcsType": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          }
        }
      },
      "CircleCIProject": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "branches": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "reponame": {
            "type": "string"
          },
          "vcs_url": {
            "type": "string"
          },
          "vcs_type": {
            "type": "string"
          }
        }
      },
      "AccessTokenResource": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TimeZoneResource": {
        "type": "object",
        "properties": {
          "zoneId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "offset": {
            "type": "object",
            "properties": {
              "totalSeconds": {
                "type": "integer",
                "format": "int32"
              },
              "id": {
                "type": "string"
              },
              "rules": {
                "type": "object",
                "properties": {
                  "fixedOffset": {
                    "type": "boolean"
                  },
                  "transitions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "duration": {
                          "type": "object",
                          "properties": {
                            "seconds": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "nano": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "units": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "timeBased": {
                                    "type": "boolean"
                                  },
                                  "dateBased": {
                                    "type": "boolean"
                                  },
                                  "durationEstimated": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "zero": {
                              "type": "boolean"
                            },
                            "negative": {
                              "type": "boolean"
                            }
                          }
                        },
                        "gap": {
                          "type": "boolean"
                        },
                        "overlap": {
                          "type": "boolean"
                        },
                        "dateTimeBefore": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dateTimeAfter": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "instant": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "transitionRules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "month": {
                          "type": "string",
                          "enum": [
                            "JANUARY",
                            "FEBRUARY",
                            "MARCH",
                            "APRIL",
                            "MAY",
                            "JUNE",
                            "JULY",
                            "AUGUST",
                            "SEPTEMBER",
                            "OCTOBER",
                            "NOVEMBER",
                            "DECEMBER"
                          ]
                        },
                        "timeDefinition": {
                          "type": "string",
                          "enum": [
                            "UTC",
                            "WALL",
                            "STANDARD"
                          ]
                        },
                        "dayOfWeek": {
                          "type": "string",
                          "enum": [
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                            "SUNDAY"
                          ]
                        },
                        "dayOfMonthIndicator": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "localTime": {
                          "$ref": "#/components/schemas/LocalTime"
                        },
                        "midnightEndOfDay": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TestObjectResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "averageDuration": {
            "type": "number",
            "format": "double"
          },
          "maxDuration": {
            "type": "integer",
            "format": "int64"
          },
          "minDuration": {
            "type": "integer",
            "format": "int64"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          }
        }
      },
      "TestObjectEntityResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectResource"
          }
        }
      },
      "TunnelMetaDataResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          },
          "apiKey": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "tenant": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "string"
          },
          "privateTunnel": {
            "type": "boolean"
          }
        }
      },
      "TestCloudLicensesResource": {
        "type": "object",
        "properties": {
          "parallelTests": {
            "type": "integer",
            "format": "int64"
          },
          "testingTime": {
            "type": "integer",
            "format": "int64"
          },
          "testingTimeLeft": {
            "type": "integer",
            "format": "int64"
          },
          "unlimitedTestingTime": {
            "type": "boolean"
          },
          "unlimitedParallelTests": {
            "type": "boolean"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageTeamResource": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamResource"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "SearchConfigResource": {
        "type": "object",
        "properties": {
          "filterConfig": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "sortDefault": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sortConfig": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ExecutionRequestResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "executionTestResult": {
            "$ref": "#/components/schemas/ExecutionTestResultResource"
          },
          "object": {
            "$ref": "#/components/schemas/TestObjectResource"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "abnormal": {
            "type": "boolean"
          },
          "percentAbnormal": {
            "type": "number",
            "format": "double"
          },
          "url": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "statusText": {
            "type": "string"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "uploadFile": {
            "$ref": "#/components/schemas/UploadFileResource"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageProjectResource": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResource"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PlatformGitRepositoryResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "repository": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "vcsType": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "BITBUCKET",
              "OTHERS",
              "AZURE",
              "AWS"
            ]
          }
        }
      },
      "PlatformProjectResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "team": {
            "$ref": "#/components/schemas/TeamResource"
          },
          "timezone": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ARCHIVE",
              "ACTIVE"
            ]
          },
          "gitRepositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformGitRepositoryResource"
            }
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageJobResource": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobResource"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageExecutionResource": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionResource"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "AgentConfigResource": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "string"
          },
          "agentName": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          },
          "os": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "DeleteProxyTunnelRequest": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeleteProxyTunnelResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "basicScheme": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}